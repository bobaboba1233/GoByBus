{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst Ticket = require('../models/Ticket');\nconst Route = require('../models/Route');\nconst Seat = require('../models/Seat');\n\n// üìå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞\nrouter.post('/book', async (req, res) => {\n  const {\n    routeId,\n    seatId,\n    passengerInfo\n  } = req.body;\n  if (!routeId || !seatId || !(passengerInfo !== null && passengerInfo !== void 0 && passengerInfo.name) || !(passengerInfo !== null && passengerInfo !== void 0 && passengerInfo.passport)) {\n    return res.status(400).json({\n      message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è'\n    });\n  }\n  try {\n    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞\n    const route = await Route.findById(routeId);\n    if (!route) {\n      return res.status(404).json({\n        message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'\n      });\n    }\n\n    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞\n    const seat = await Seat.findById(seatId);\n    if (!seat || seat.route.toString() !== routeId) {\n      return res.status(404).json({\n        message: '–ú–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–∞—Ä—à—Ä—É—Ç—É'\n      });\n    }\n    if (seat.isBooked) {\n      return res.status(409).json({\n        message: '–≠—Ç–æ –º–µ—Å—Ç–æ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ'\n      });\n    }\n\n    // –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞\n    const ticket = new Ticket({\n      routeId,\n      seatId,\n      passengerName: passengerInfo.name,\n      passport: passengerInfo.passport\n    });\n    await ticket.save();\n\n    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –º–µ—Å—Ç–∞\n    seat.isBooked = true;\n    await seat.save();\n    res.status(201).json({\n      message: '–ë–∏–ª–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω',\n      ticketId: ticket._id\n    });\n  } catch (err) {\n    console.error('–û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', err);\n    res.status(500).json({\n      message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏'\n    });\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","Ticket","Route","Seat","post","req","res","routeId","seatId","passengerInfo","body","name","passport","status","json","message","route","findById","seat","toString","isBooked","ticket","passengerName","save","ticketId","_id","err","console","error","module","exports"],"sources":["E:/work shit/gobybus/client/src/pages/Ticket.jsx"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst Ticket = require('../models/Ticket');\r\nconst Route = require('../models/Route');\r\nconst Seat = require('../models/Seat');\r\n\r\n// üìå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞\r\nrouter.post('/book', async (req, res) => {\r\n  const { routeId, seatId, passengerInfo } = req.body;\r\n\r\n  if (!routeId || !seatId || !passengerInfo?.name || !passengerInfo?.passport) {\r\n    return res.status(400).json({ message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è' });\r\n  }\r\n\r\n  try {\r\n    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞\r\n    const route = await Route.findById(routeId);\r\n    if (!route) {\r\n      return res.status(404).json({ message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });\r\n    }\r\n\r\n    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞\r\n    const seat = await Seat.findById(seatId);\r\n    if (!seat || seat.route.toString() !== routeId) {\r\n      return res.status(404).json({ message: '–ú–µ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–∞—Ä—à—Ä—É—Ç—É' });\r\n    }\r\n\r\n    if (seat.isBooked) {\r\n      return res.status(409).json({ message: '–≠—Ç–æ –º–µ—Å—Ç–æ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ' });\r\n    }\r\n\r\n    // –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–ª–µ—Ç–∞\r\n    const ticket = new Ticket({\r\n      routeId,\r\n      seatId,\r\n      passengerName: passengerInfo.name,\r\n      passport: passengerInfo.passport,\r\n    });\r\n\r\n    await ticket.save();\r\n\r\n    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –º–µ—Å—Ç–∞\r\n    seat.isBooked = true;\r\n    await seat.save();\r\n\r\n    res.status(201).json({ message: '–ë–∏–ª–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω', ticketId: ticket._id });\r\n  } catch (err) {\r\n    console.error('–û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', err);\r\n    res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,MAAM,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC1C,MAAMI,KAAK,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMK,IAAI,GAAGL,OAAO,CAAC,gBAAgB,CAAC;;AAEtC;AACAC,MAAM,CAACK,IAAI,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACvC,MAAM;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAc,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAEnD,IAAI,CAACH,OAAO,IAAI,CAACC,MAAM,IAAI,EAACC,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEE,IAAI,KAAI,EAACF,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEG,QAAQ,GAAE;IAC3E,OAAON,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAgC,CAAC,CAAC;EAC3E;EAEA,IAAI;IACF;IACA,MAAMC,KAAK,GAAG,MAAMd,KAAK,CAACe,QAAQ,CAACV,OAAO,CAAC;IAC3C,IAAI,CAACS,KAAK,EAAE;MACV,OAAOV,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAoB,CAAC,CAAC;IAC/D;;IAEA;IACA,MAAMG,IAAI,GAAG,MAAMf,IAAI,CAACc,QAAQ,CAACT,MAAM,CAAC;IACxC,IAAI,CAACU,IAAI,IAAIA,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,KAAKZ,OAAO,EAAE;MAC9C,OAAOD,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA+C,CAAC,CAAC;IAC1F;IAEA,IAAIG,IAAI,CAACE,QAAQ,EAAE;MACjB,OAAOd,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA8B,CAAC,CAAC;IACzE;;IAEA;IACA,MAAMM,MAAM,GAAG,IAAIpB,MAAM,CAAC;MACxBM,OAAO;MACPC,MAAM;MACNc,aAAa,EAAEb,aAAa,CAACE,IAAI;MACjCC,QAAQ,EAAEH,aAAa,CAACG;IAC1B,CAAC,CAAC;IAEF,MAAMS,MAAM,CAACE,IAAI,CAAC,CAAC;;IAEnB;IACAL,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,MAAMF,IAAI,CAACK,IAAI,CAAC,CAAC;IAEjBjB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,4BAA4B;MAAES,QAAQ,EAAEH,MAAM,CAACI;IAAI,CAAC,CAAC;EACvF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1CpB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAkC,CAAC,CAAC;EACtE;AACF,CAAC,CAAC;AAEFc,MAAM,CAACC,OAAO,GAAG/B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}