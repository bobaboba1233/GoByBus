{"ast":null,"code":"var _jsxFileName = \"E:\\\\work shit\\\\gobybus\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuth, setIsAuth] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const meRes = await fetch('http://localhost:5000/api/auth/me', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (meRes.ok) {\n            const user = await meRes.json();\n            setUser(user);\n            setIsAuth(true);\n          } else {\n            clearAuth();\n          }\n        }\n      } catch {\n        clearAuth();\n      }\n    };\n    checkAuth();\n  }, []);\n  const clearAuth = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuth(false);\n  };\n  const login = async (email, password) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await res.json();\n      console.log(data.token); // Добавь это, чтобы увидеть, какой токен получен\n      localStorage.setItem('token', data.token);\n      const meRes = await fetch('http://localhost:5000/api/auth/me', {\n        headers: {\n          Authorization: `Bearer ${data.token}`\n        }\n      });\n      if (!meRes.ok) {\n        throw new Error('Failed to fetch user');\n      }\n      const user = await meRes.json();\n      setUser(user);\n      setIsAuth(true);\n      return true;\n    } catch (err) {\n      clearAuth();\n      return false;\n    }\n  };\n  const logout = () => {\n    clearAuth();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuth,\n      setUser,\n      login,\n      logout,\n      setIsAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GEqAy1BOmMghpv4JXTMb3wHcKfM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuth","setIsAuth","navigate","checkAuth","token","localStorage","getItem","meRes","fetch","headers","Authorization","ok","json","clearAuth","removeItem","login","email","password","res","method","body","JSON","stringify","Error","data","console","log","setItem","err","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/work shit/gobybus/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const meRes = await fetch('http://localhost:5000/api/auth/me', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (meRes.ok) {\r\n            const user = await meRes.json();\r\n            setUser(user);\r\n            setIsAuth(true);\r\n          } else {\r\n            clearAuth();\r\n          }\r\n        }\r\n      } catch {\r\n        clearAuth();\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const clearAuth = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuth(false);\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await res.json();\r\n      console.log(data.token);  // Добавь это, чтобы увидеть, какой токен получен\r\n      localStorage.setItem('token', data.token);    \r\n\r\n      const meRes = await fetch('http://localhost:5000/api/auth/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${data.token}`,\r\n        },\r\n      });\r\n\r\n      if (!meRes.ok) {\r\n        throw new Error('Failed to fetch user');\r\n      }\r\n\r\n      const user = await meRes.json();\r\n      setUser(user);\r\n      setIsAuth(true);\r\n      return true;\r\n    } catch (err) {\r\n      clearAuth();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    clearAuth();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuth, setUser, login, logout, setIsAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}