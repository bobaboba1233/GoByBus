{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getCookieParser\", {\n  enumerable: true,\n  get: function () {\n    return getCookieParser;\n  }\n});\nfunction getCookieParser(headers) {\n  return function parseCookie() {\n    const {\n      cookie\n    } = headers;\n    if (!cookie) {\n      return {};\n    }\n    const {\n      parse: parseCookieFn\n    } = require('next/dist/compiled/cookie');\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n  };\n}","map":{"version":3,"names":["getCookieParser","headers","parseCookie","cookie","parse","parseCookieFn","require","Array","isArray","join"],"sources":["C:\\Users\\богдан\\Desktop\\gobybus\\client\\node_modules\\next\\src\\server\\api-utils\\get-cookie-parser.ts"],"sourcesContent":["import type { NextApiRequestCookies } from '.'\n\n/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */\n\nexport function getCookieParser(headers: {\n  [key: string]: string | string[] | null | undefined\n}): () => NextApiRequestCookies {\n  return function parseCookie(): NextApiRequestCookies {\n    const { cookie } = headers\n\n    if (!cookie) {\n      return {}\n    }\n\n    const { parse: parseCookieFn } = require('next/dist/compiled/cookie')\n    return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie)\n  }\n}\n"],"mappings":";;;;;+BAOgB;;;WAAAA,eAAA;;;AAAT,SAASA,gBAAgBC,OAE/B;EACC,OAAO,SAASC,YAAA;IACd,MAAM;MAAEC;IAAM,CAAE,GAAGF,OAAA;IAEnB,IAAI,CAACE,MAAA,EAAQ;MACX,OAAO,CAAC;IACV;IAEA,MAAM;MAAEC,KAAA,EAAOC;IAAa,CAAE,GAAGC,OAAA,CAAQ;IACzC,OAAOD,aAAA,CAAcE,KAAA,CAAMC,OAAO,CAACL,MAAA,IAAUA,MAAA,CAAOM,IAAI,CAAC,QAAQN,MAAA;EACnE;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}