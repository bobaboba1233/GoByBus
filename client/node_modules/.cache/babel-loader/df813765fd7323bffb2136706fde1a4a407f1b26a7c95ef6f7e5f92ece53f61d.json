{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"setAttributesFromProps\", {\n  enumerable: true,\n  get: function () {\n    return setAttributesFromProps;\n  }\n});\nconst DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule'\n};\nconst ignoreProps = ['onLoad', 'onReady', 'dangerouslySetInnerHTML', 'children', 'onError', 'strategy', 'stylesheets'];\nfunction isBooleanScriptAttribute(attr) {\n  return ['async', 'defer', 'noModule'].includes(attr);\n}\nfunction setAttributesFromProps(el, props) {\n  for (const [p, value] of Object.entries(props)) {\n    if (!props.hasOwnProperty(p)) continue;\n    if (ignoreProps.includes(p)) continue;\n    // we don't render undefined props to the DOM\n    if (value === undefined) {\n      continue;\n    }\n    const attr = DOMAttributeNames[p] || p.toLowerCase();\n    if (el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr)) {\n      // Correctly assign boolean script attributes\n      // https://github.com/vercel/next.js/pull/20748\n      ;\n      el[attr] = !!value;\n    } else {\n      el.setAttribute(attr, String(value));\n    }\n    // Remove falsy non-zero boolean attributes so they are correctly interpreted\n    // (e.g. if we set them to false, this coerces to the string \"false\", which the browser interprets as true)\n    if (value === false || el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr) && (!value || value === 'false')) {\n      // Call setAttribute before, as we need to set and unset the attribute to override force async:\n      // https://html.spec.whatwg.org/multipage/scripting.html#script-force-async\n      el.setAttribute(attr, '');\n      el.removeAttribute(attr);\n    }\n  }\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["setAttributesFromProps","DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","noModule","ignoreProps","isBooleanScriptAttribute","attr","includes","el","props","p","value","Object","entries","hasOwnProperty","undefined","toLowerCase","tagName","setAttribute","String","removeAttribute"],"sources":["C:\\Users\\богдан\\Desktop\\gobybus\\client\\node_modules\\next\\src\\client\\set-attributes-from-props.ts"],"sourcesContent":["const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule',\n}\n\nconst ignoreProps = [\n  'onLoad',\n  'onReady',\n  'dangerouslySetInnerHTML',\n  'children',\n  'onError',\n  'strategy',\n  'stylesheets',\n]\n\nfunction isBooleanScriptAttribute(\n  attr: string\n): attr is 'async' | 'defer' | 'noModule' {\n  return ['async', 'defer', 'noModule'].includes(attr)\n}\n\nexport function setAttributesFromProps(el: HTMLElement, props: object) {\n  for (const [p, value] of Object.entries(props)) {\n    if (!props.hasOwnProperty(p)) continue\n    if (ignoreProps.includes(p)) continue\n\n    // we don't render undefined props to the DOM\n    if (value === undefined) {\n      continue\n    }\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n\n    if (el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr)) {\n      // Correctly assign boolean script attributes\n      // https://github.com/vercel/next.js/pull/20748\n      ;(el as HTMLScriptElement)[attr] = !!value\n    } else {\n      el.setAttribute(attr, String(value))\n    }\n\n    // Remove falsy non-zero boolean attributes so they are correctly interpreted\n    // (e.g. if we set them to false, this coerces to the string \"false\", which the browser interprets as true)\n    if (\n      value === false ||\n      (el.tagName === 'SCRIPT' &&\n        isBooleanScriptAttribute(attr) &&\n        (!value || value === 'false'))\n    ) {\n      // Call setAttribute before, as we need to set and unset the attribute to override force async:\n      // https://html.spec.whatwg.org/multipage/scripting.html#script-force-async\n      el.setAttribute(attr, '')\n      el.removeAttribute(attr)\n    }\n  }\n}\n"],"mappings":";;;;;+BAwBgB;;;WAAAA,sBAAA;;;AAxBhB,MAAMC,iBAAA,GAA4C;EAChDC,aAAA,EAAe;EACfC,SAAA,EAAW;EACXC,OAAA,EAAS;EACTC,SAAA,EAAW;EACXC,QAAA,EAAU;AACZ;AAEA,MAAMC,WAAA,GAAc,CAClB,UACA,WACA,2BACA,YACA,WACA,YACA,cACD;AAED,SAASC,yBACPC,IAAY;EAEZ,OAAO,CAAC,SAAS,SAAS,WAAW,CAACC,QAAQ,CAACD,IAAA;AACjD;AAEO,SAAST,uBAAuBW,EAAe,EAAEC,KAAa;EACnE,KAAK,MAAM,CAACC,CAAA,EAAGC,KAAA,CAAM,IAAIC,MAAA,CAAOC,OAAO,CAACJ,KAAA,GAAQ;IAC9C,IAAI,CAACA,KAAA,CAAMK,cAAc,CAACJ,CAAA,GAAI;IAC9B,IAAIN,WAAA,CAAYG,QAAQ,CAACG,CAAA,GAAI;IAE7B;IACA,IAAIC,KAAA,KAAUI,SAAA,EAAW;MACvB;IACF;IAEA,MAAMT,IAAA,GAAOR,iBAAiB,CAACY,CAAA,CAAE,IAAIA,CAAA,CAAEM,WAAW;IAElD,IAAIR,EAAA,CAAGS,OAAO,KAAK,YAAYZ,wBAAA,CAAyBC,IAAA,GAAO;MAC7D;MACA;;MACEE,EAAwB,CAACF,IAAA,CAAK,GAAG,CAAC,CAACK,KAAA;IACvC,OAAO;MACLH,EAAA,CAAGU,YAAY,CAACZ,IAAA,EAAMa,MAAA,CAAOR,KAAA;IAC/B;IAEA;IACA;IACA,IACEA,KAAA,KAAU,SACTH,EAAA,CAAGS,OAAO,KAAK,YACdZ,wBAAA,CAAyBC,IAAA,MACxB,CAACK,KAAA,IAASA,KAAA,KAAU,OAAM,GAC7B;MACA;MACA;MACAH,EAAA,CAAGU,YAAY,CAACZ,IAAA,EAAM;MACtBE,EAAA,CAAGY,eAAe,CAACd,IAAA;IACrB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}