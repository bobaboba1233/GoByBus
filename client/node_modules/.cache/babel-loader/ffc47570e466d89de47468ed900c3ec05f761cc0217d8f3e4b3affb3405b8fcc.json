{"ast":null,"code":"// src/api/getCities.js\nimport axios from 'axios';\nexport const getCities = async query => {\n  if (!query) return [];\n  try {\n    const response = await axios.get('https://nominatim.openstreetmap.org/search', {\n      params: {\n        q: query,\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: 'ru',\n        dedupe: 1\n      }\n    });\n    const cities = response.data.filter(place => place.type === 'city' || place.type === 'town').map(place => place.display_name.split(',')[0]);\n    return [...new Set(cities)];\n  } catch (error) {\n    console.error('Ошибка при получении городов:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","getCities","query","response","get","params","q","format","addressdetails","limit","countrycodes","dedupe","cities","data","filter","place","type","map","display_name","split","Set","error","console"],"sources":["C:/Users/богдан/Desktop/gobybus/client/src/getCities.js"],"sourcesContent":["// src/api/getCities.js\r\nimport axios from 'axios';\r\n\r\nexport const getCities = async (query) => {\r\n  if (!query) return [];\r\n\r\n  try {\r\n    const response = await axios.get('https://nominatim.openstreetmap.org/search', {\r\n      params: {\r\n        q: query,\r\n        format: 'json',\r\n        addressdetails: 1,\r\n        limit: 10,\r\n        countrycodes: 'ru',\r\n        dedupe: 1,\r\n      },\r\n    });\r\n\r\n    const cities = response.data\r\n      .filter((place) => place.type === 'city' || place.type === 'town')\r\n      .map((place) => place.display_name.split(',')[0]);\r\n\r\n    return [...new Set(cities)];\r\n  } catch (error) {\r\n    console.error('Ошибка при получении городов:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxC,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EAErB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,4CAA4C,EAAE;MAC7EC,MAAM,EAAE;QACNC,CAAC,EAAEJ,KAAK;QACRK,MAAM,EAAE,MAAM;QACdC,cAAc,EAAE,CAAC;QACjBC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,IAAI;QAClBC,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAGT,QAAQ,CAACU,IAAI,CACzBC,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,MAAM,IAAID,KAAK,CAACC,IAAI,KAAK,MAAM,CAAC,CACjEC,GAAG,CAAEF,KAAK,IAAKA,KAAK,CAACG,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnD,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACR,MAAM,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}