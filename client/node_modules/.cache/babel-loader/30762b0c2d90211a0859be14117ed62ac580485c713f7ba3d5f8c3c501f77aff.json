{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0431\\u043E\\u0433\\u0434\\u0430\\u043D\\\\Documents\\\\GitHub\\\\GoByBus\\\\client\\\\src\\\\pages\\\\admin\\\\login.js\",\n  _s = $RefreshSig$();\n// src/components/admin/AdminLogin.js\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Заданные логин и пароль\n    const adminEmail = 'admin@example.com';\n    const adminPassword = 'admin123';\n    if (email === adminEmail && password === adminPassword) {\n      // Если email и пароль верны, создаем JWT\n      const token = 'admin-token'; // Пример токена (это можно сгенерировать)\n      localStorage.setItem('token', token); // Сохраняем токен в localStorage\n      navigate('/admin'); // Перенаправляем в админ-панель\n    } else {\n      alert('Неверные данные');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '50px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0430\\u0434\\u043C\\u0438\\u043D\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","adminEmail","adminPassword","token","localStorage","setItem","alert","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/богдан/Documents/GitHub/GoByBus/client/src/pages/admin/login.js"],"sourcesContent":["// src/components/admin/AdminLogin.js\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function AdminLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Заданные логин и пароль\r\n    const adminEmail = 'admin@example.com';\r\n    const adminPassword = 'admin123';\r\n\r\n    if (email === adminEmail && password === adminPassword) {\r\n      // Если email и пароль верны, создаем JWT\r\n      const token = 'admin-token';  // Пример токена (это можно сгенерировать)\r\n      localStorage.setItem('token', token); // Сохраняем токен в localStorage\r\n      navigate('/admin'); // Перенаправляем в админ-панель\r\n    } else {\r\n      alert('Неверные данные');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '50px auto' }}>\r\n      <h1>Вход в админку</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Пароль\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,UAAU,GAAG,mBAAmB;IACtC,MAAMC,aAAa,GAAG,UAAU;IAEhC,IAAIT,KAAK,KAAKQ,UAAU,IAAIN,QAAQ,KAAKO,aAAa,EAAE;MACtD;MACA,MAAMC,KAAK,GAAG,aAAa,CAAC,CAAE;MAC9BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;MACtCN,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLS,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,gBACrDpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MAAMyB,QAAQ,EAAEjB,WAAY;MAAAY,QAAA,gBAC1BpB,OAAA;QACE0B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAGnB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,OAAO;QACnBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFxB,OAAA;QACE0B,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEtB,QAAS;QAChBuB,QAAQ,EAAGnB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,sCAAQ;QACpBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CA5CuBD,UAAU;EAAA,QAGfH,WAAW;AAAA;AAAAkC,EAAA,GAHN/B,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}