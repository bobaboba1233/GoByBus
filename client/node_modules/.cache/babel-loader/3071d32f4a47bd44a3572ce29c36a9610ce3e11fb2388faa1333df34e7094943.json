{"ast":null,"code":"import{createContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuth,setIsAuth]=useState(false);const navigate=useNavigate();useEffect(()=>{const checkAuth=async()=>{try{const token=localStorage.getItem('token');if(token){const meRes=await fetch('http://localhost:5000/api/auth/me',{headers:{Authorization:`Bearer ${token}`}});if(meRes.ok){const user=await meRes.json();setUser(user);setIsAuth(true);}else{clearAuth();}}}catch{clearAuth();}};checkAuth();},[]);const clearAuth=()=>{localStorage.removeItem('token');setUser(null);setIsAuth(false);};const login=async(email,password)=>{try{const res=await fetch('http://localhost:5000/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!res.ok){throw new Error('Login failed');}const data=await res.json();console.log(data.token);// Добавь это, чтобы увидеть, какой токен получен\nlocalStorage.setItem('token',data.token);const meRes=await fetch('http://localhost:5000/api/auth/me',{headers:{Authorization:`Bearer ${data.token}`}});if(!meRes.ok){throw new Error('Failed to fetch user');}const user=await meRes.json();setUser(user);setIsAuth(true);return true;}catch(err){clearAuth();return false;}};const logout=()=>{clearAuth();navigate('/');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isAuth,setUser,login,logout,setIsAuth},children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isAuth","setIsAuth","navigate","checkAuth","token","localStorage","getItem","meRes","fetch","headers","Authorization","ok","json","clearAuth","removeItem","login","email","password","res","method","body","JSON","stringify","Error","data","console","log","setItem","err","logout","Provider","value"],"sources":["C:/Users/богдан/Desktop/gobybus/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const meRes = await fetch('http://localhost:5000/api/auth/me', {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (meRes.ok) {\r\n            const user = await meRes.json();\r\n            setUser(user);\r\n            setIsAuth(true);\r\n          } else {\r\n            clearAuth();\r\n          }\r\n        }\r\n      } catch {\r\n        clearAuth();\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const clearAuth = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuth(false);\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await res.json();\r\n      console.log(data.token);  // Добавь это, чтобы увидеть, какой токен получен\r\n      localStorage.setItem('token', data.token);    \r\n\r\n      const meRes = await fetch('http://localhost:5000/api/auth/me', {\r\n        headers: {\r\n          Authorization: `Bearer ${data.token}`,\r\n        },\r\n      });\r\n\r\n      if (!meRes.ok) {\r\n        throw new Error('Failed to fetch user');\r\n      }\r\n\r\n      const user = await meRes.json();\r\n      setUser(user);\r\n      setIsAuth(true);\r\n      return true;\r\n    } catch (err) {\r\n      clearAuth();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    clearAuth();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuth, setUser, login, logout, setIsAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}