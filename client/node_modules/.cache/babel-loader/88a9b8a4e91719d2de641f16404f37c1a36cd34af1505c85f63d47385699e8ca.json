{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0431\\u043E\\u0433\\u0434\\u0430\\u043D\\\\Desktop\\\\gobybus\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from '../utils/axiosInstance'; // отдельный axios с токеном\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuth, setIsAuth] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await axios.get('/auth/me');\n        setUser(res.data);\n        setIsAuth(true);\n      } catch {\n        clearAuth();\n      }\n    };\n    const token = localStorage.getItem('token');\n    if (token) checkAuth();\n  }, []);\n  const clearAuth = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuth(false);\n  };\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n\n      // повторный запрос за юзером\n      const userRes = await axios.get('/auth/me');\n      setUser(userRes.data);\n      setIsAuth(true);\n      return true;\n    } catch (err) {\n      clearAuth();\n      return false;\n    }\n  };\n  const logout = () => {\n    clearAuth();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GEqAy1BOmMghpv4JXTMb3wHcKfM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuth","setIsAuth","navigate","checkAuth","res","get","data","clearAuth","token","localStorage","getItem","removeItem","login","email","password","post","setItem","userRes","err","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/богдан/Desktop/gobybus/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport axios from '../utils/axiosInstance'; // отдельный axios с токеном\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await axios.get('/auth/me');\r\n        setUser(res.data);\r\n        setIsAuth(true);\r\n      } catch {\r\n        clearAuth();\r\n      }\r\n    };\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token) checkAuth();\r\n  }, []);\r\n\r\n  const clearAuth = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuth(false);\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await axios.post('/auth/login', { email, password });\r\n      localStorage.setItem('token', res.data.token);\r\n\r\n      // повторный запрос за юзером\r\n      const userRes = await axios.get('/auth/me');\r\n      setUser(userRes.data);\r\n      setIsAuth(true);\r\n      return true;\r\n    } catch (err) {\r\n      clearAuth();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    clearAuth();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAuth, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,wBAAwB,CAAC,CAAC;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,UAAU,CAAC;QACvCN,OAAO,CAACK,GAAG,CAACE,IAAI,CAAC;QACjBL,SAAS,CAAC,IAAI,CAAC;MACjB,CAAC,CAAC,MAAM;QACNM,SAAS,CAAC,CAAC;MACb;IACF,CAAC;IAED,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAEL,SAAS,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBE,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;IAChCZ,OAAO,CAAC,IAAI,CAAC;IACbE,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMW,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMV,GAAG,GAAG,MAAMd,KAAK,CAACyB,IAAI,CAAC,aAAa,EAAE;QAAEF,KAAK;QAAEC;MAAS,CAAC,CAAC;MAChEL,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEZ,GAAG,CAACE,IAAI,CAACE,KAAK,CAAC;;MAE7C;MACA,MAAMS,OAAO,GAAG,MAAM3B,KAAK,CAACe,GAAG,CAAC,UAAU,CAAC;MAC3CN,OAAO,CAACkB,OAAO,CAACX,IAAI,CAAC;MACrBL,SAAS,CAAC,IAAI,CAAC;MACf,OAAO,IAAI;IACb,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZX,SAAS,CAAC,CAAC;MACX,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBZ,SAAS,CAAC,CAAC;IACXL,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE,MAAM;MAAEY,KAAK;MAAEO;IAAO,CAAE;IAAAvB,QAAA,EAC1DA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CApDWF,YAAY;EAAA,QAGNJ,WAAW;AAAA;AAAAmC,EAAA,GAHjB/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}