{"ast":null,"code":"var _jsxFileName = \"E:\\\\work shit\\\\gobybus\\\\client\\\\src\\\\pages\\\\ConfirmEmail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmEmail = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('loading');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams(); // Получаем параметры из URL\n\n  useEffect(() => {\n    const confirmEmail = async () => {\n      const token = searchParams.get('token');\n      try {\n        const res = await fetch(`http://localhost:5000/api/auth/confirm-email?token=${token}`);\n        const data = await res.json();\n        if (!res.ok) {\n          throw new Error(data.message || 'Ошибка подтверждения');\n        }\n        setMessage('✅ Email успешно подтвержден!');\n        setStatus('success');\n\n        // ⏳ Через 2 секунды редиректим на главную страницу с параметром\n        setTimeout(() => {\n          navigate('/?success=email_confirmed');\n        }, 2000);\n      } catch (err) {\n        setMessage(`❌ ${err.message}`);\n        setStatus('error');\n      }\n    };\n    const token = searchParams.get('token');\n    if (token) {\n      confirmEmail();\n    } else {\n      setMessage('❌ Токен не найден в ссылке');\n      setStatus('error');\n    }\n  }, [searchParams, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: status === 'error' ? 'red' : 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmEmail, \"pyi1SIR+uIf7SwFT+Jn0sKkahkM=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = ConfirmEmail;\nexport default ConfirmEmail;\nvar _c;\n$RefreshReg$(_c, \"ConfirmEmail\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","jsxDEV","_jsxDEV","ConfirmEmail","_s","message","setMessage","status","setStatus","navigate","searchParams","confirmEmail","token","get","res","fetch","data","json","ok","Error","setTimeout","err","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["E:/work shit/gobybus/client/src/pages/ConfirmEmail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst ConfirmEmail = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('loading');\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams(); // Получаем параметры из URL\r\n\r\n  useEffect(() => {\r\n    const confirmEmail = async () => {\r\n      const token = searchParams.get('token');\r\n\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/auth/confirm-email?token=${token}`);\r\n        const data = await res.json();\r\n\r\n        if (!res.ok) {\r\n          throw new Error(data.message || 'Ошибка подтверждения');\r\n        }\r\n\r\n        setMessage('✅ Email успешно подтвержден!');\r\n        setStatus('success');\r\n        \r\n        // ⏳ Через 2 секунды редиректим на главную страницу с параметром\r\n        setTimeout(() => {\r\n          navigate('/?success=email_confirmed');\r\n        }, 2000);\r\n\r\n      } catch (err) {\r\n        setMessage(`❌ ${err.message}`);\r\n        setStatus('error');\r\n      }\r\n    };\r\n\r\n    const token = searchParams.get('token');\r\n    if (token) {\r\n      confirmEmail();\r\n    } else {\r\n      setMessage('❌ Токен не найден в ссылке');\r\n      setStatus('error');\r\n    }\r\n  }, [searchParams, navigate]);\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', textAlign: 'center' }}>\r\n      <h1>Подтверждение Email</h1>\r\n      <p style={{ color: status === 'error' ? 'red' : 'green' }}>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,YAAY,CAAC,GAAGV,eAAe,CAAC,CAAC,CAAC,CAAC;;EAE1CF,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAGF,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;MAEvC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sDAAsDH,KAAK,EAAE,CAAC;QACtF,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAE7B,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACX,OAAO,IAAI,sBAAsB,CAAC;QACzD;QAEAC,UAAU,CAAC,8BAA8B,CAAC;QAC1CE,SAAS,CAAC,SAAS,CAAC;;QAEpB;QACAY,UAAU,CAAC,MAAM;UACfX,QAAQ,CAAC,2BAA2B,CAAC;QACvC,CAAC,EAAE,IAAI,CAAC;MAEV,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZf,UAAU,CAAC,KAAKe,GAAG,CAAChB,OAAO,EAAE,CAAC;QAC9BG,SAAS,CAAC,OAAO,CAAC;MACpB;IACF,CAAC;IAED,MAAMI,KAAK,GAAGF,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;IACvC,IAAID,KAAK,EAAE;MACTD,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLL,UAAU,CAAC,4BAA4B,CAAC;MACxCE,SAAS,CAAC,OAAO,CAAC;IACpB;EACF,CAAC,EAAE,CAACE,YAAY,EAAED,QAAQ,CAAC,CAAC;EAE5B,oBACEP,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDvB,OAAA;MAAAuB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MAAGoB,KAAK,EAAE;QAAEQ,KAAK,EAAEvB,MAAM,KAAK,OAAO,GAAG,KAAK,GAAG;MAAQ,CAAE;MAAAkB,QAAA,EAAEpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/CID,YAAY;EAAA,QAGCJ,WAAW,EACLC,eAAe;AAAA;AAAA+B,EAAA,GAJlC5B,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}