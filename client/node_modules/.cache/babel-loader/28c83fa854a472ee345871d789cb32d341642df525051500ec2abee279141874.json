{"ast":null,"code":"/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"__unsafeCreateTrustedScriptURL\", {\n  enumerable: true,\n  get: function () {\n    return __unsafeCreateTrustedScriptURL;\n  }\n});\nlet policy;\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */\nfunction getPolicy() {\n  if (typeof policy === 'undefined' && typeof window !== 'undefined') {\n    var _window_trustedTypes;\n    policy = ((_window_trustedTypes = window.trustedTypes) == null ? void 0 : _window_trustedTypes.createPolicy('nextjs', {\n      createHTML: input => input,\n      createScript: input => input,\n      createScriptURL: input => input\n    })) || null;\n  }\n  return policy;\n}\nfunction __unsafeCreateTrustedScriptURL(url) {\n  var _getPolicy;\n  return ((_getPolicy = getPolicy()) == null ? void 0 : _getPolicy.createScriptURL(url)) || url;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["__unsafeCreateTrustedScriptURL","policy","getPolicy","window","_window_trustedTypes","trustedTypes","createPolicy","createHTML","input","createScript","createScriptURL","url","_getPolicy"],"sources":["C:\\Users\\богдан\\Desktop\\gobybus\\client\\node_modules\\next\\src\\client\\trusted-types.ts"],"sourcesContent":["/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */\nlet policy: TrustedTypePolicy | null | undefined\n\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */\nfunction getPolicy() {\n  if (typeof policy === 'undefined' && typeof window !== 'undefined') {\n    policy =\n      window.trustedTypes?.createPolicy('nextjs', {\n        createHTML: (input) => input,\n        createScript: (input) => input,\n        createScriptURL: (input) => input,\n      }) || null\n  }\n\n  return policy\n}\n\n/**\n * Unsafely promote a string to a TrustedScriptURL, falling back to strings\n * when Trusted Types are not available.\n * This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will cause a browser to load and execute a resource, e.g. when\n * assigning to script.src.\n */\nexport function __unsafeCreateTrustedScriptURL(\n  url: string\n): TrustedScriptURL | string {\n  return getPolicy()?.createScriptURL(url) || url\n}\n"],"mappings":"AAAA;;;GAGC;;;;;+BA6Be;;;WAAAA,8BAAA;;;AA5BhB,IAAIC,MAAA;AAEJ;;;;AAIA,SAASC,UAAA;EACP,IAAI,OAAOD,MAAA,KAAW,eAAe,OAAOE,MAAA,KAAW,aAAa;QAEhEC,oBAAA;IADFH,MAAA,GACE,EAAAG,oBAAA,GAAAD,MAAA,CAAOE,YAAY,qBAAnBD,oBAAA,CAAqBE,YAAY,CAAC,UAAU;MAC1CC,UAAA,EAAaC,KAAA,IAAUA,KAAA;MACvBC,YAAA,EAAeD,KAAA,IAAUA,KAAA;MACzBE,eAAA,EAAkBF,KAAA,IAAUA;IAC9B,OAAM;EACV;EAEA,OAAOP,MAAA;AACT;AAWO,SAASD,+BACdW,GAAW;MAEJC,UAAA;EAAP,OAAO,EAAAA,UAAA,GAAAV,SAAA,uBAAAU,UAAA,CAAaF,eAAe,CAACC,GAAA,MAAQA,GAAA;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}