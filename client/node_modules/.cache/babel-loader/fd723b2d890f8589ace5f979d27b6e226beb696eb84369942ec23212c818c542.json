{"ast":null,"code":"// src/components/admin/AdminLogin.js\nimport{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminLogin(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const navigate=useNavigate();const handleLogin=e=>{e.preventDefault();// Заданные логин и пароль\nconst adminEmail='admin@example.com';const adminPassword='admin123';if(email===adminEmail&&password===adminPassword){// Если email и пароль верны, создаем JWT\nconst token='admin-token';// Пример токена (это можно сгенерировать)\nlocalStorage.setItem('token',token);// Сохраняем токен в localStorage\nnavigate('/admin');// Перенаправляем в админ-панель\n}else{alert('Неверные данные');}};return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'400px',margin:'50px auto'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0430\\u0434\\u043C\\u0438\\u043D\\u043A\\u0443\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]})]});}","map":{"version":3,"names":["useState","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminLogin","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","adminEmail","adminPassword","token","localStorage","setItem","alert","style","maxWidth","margin","children","onSubmit","type","value","onChange","target","placeholder","required"],"sources":["C:/Users/богдан/Desktop/gobybus/client/src/pages/admin/login.js"],"sourcesContent":["// src/components/admin/AdminLogin.js\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function AdminLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Заданные логин и пароль\r\n    const adminEmail = 'admin@example.com';\r\n    const adminPassword = 'admin123';\r\n\r\n    if (email === adminEmail && password === adminPassword) {\r\n      // Если email и пароль верны, создаем JWT\r\n      const token = 'admin-token';  // Пример токена (это можно сгенерировать)\r\n      localStorage.setItem('token', token); // Сохраняем токен в localStorage\r\n      navigate('/admin'); // Перенаправляем в админ-панель\r\n    } else {\r\n      alert('Неверные данные');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '50px auto' }}>\r\n      <h1>Вход в админку</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Пароль\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAG,CACnC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,WAAW,CAAIC,CAAC,EAAK,CACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB;AACA,KAAM,CAAAC,UAAU,CAAG,mBAAmB,CACtC,KAAM,CAAAC,aAAa,CAAG,UAAU,CAEhC,GAAIT,KAAK,GAAKQ,UAAU,EAAIN,QAAQ,GAAKO,aAAa,CAAE,CACtD;AACA,KAAM,CAAAC,KAAK,CAAG,aAAa,CAAG;AAC9BC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CAAE;AACtCN,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACtB,CAAC,IAAM,CACLS,KAAK,CAAC,iBAAiB,CAAC,CAC1B,CACF,CAAC,CAED,mBACEf,KAAA,QAAKgB,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,WAAY,CAAE,CAAAC,QAAA,eACrDrB,IAAA,OAAAqB,QAAA,CAAI,4EAAc,CAAI,CAAC,cACvBnB,KAAA,SAAMoB,QAAQ,CAAEb,WAAY,CAAAY,QAAA,eAC1BrB,IAAA,UACEuB,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEpB,KAAM,CACbqB,QAAQ,CAAGf,CAAC,EAAKL,QAAQ,CAACK,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAC1CG,WAAW,CAAC,OAAO,CACnBC,QAAQ,MACT,CAAC,cACF5B,IAAA,UACEuB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAElB,QAAS,CAChBmB,QAAQ,CAAGf,CAAC,EAAKH,WAAW,CAACG,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAC7CG,WAAW,CAAC,sCAAQ,CACpBC,QAAQ,MACT,CAAC,cACF5B,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,gCAAK,CAAQ,CAAC,EAChC,CAAC,EACJ,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}