{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"HeadManagerContext\", {\n  enumerable: true,\n  get: function () {\n    return HeadManagerContext;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _react = /*#__PURE__*/_interop_require_default._(require(\"react\"));\nconst HeadManagerContext = _react.default.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext';\n}","map":{"version":3,"names":["HeadManagerContext","_react","default","createContext","process","env","NODE_ENV","displayName"],"sources":["C:\\Users\\богдан\\Desktop\\gobybus\\client\\node_modules\\next\\src\\shared\\lib\\head-manager-context.shared-runtime.ts"],"sourcesContent":["import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n  getIsSsr?: () => boolean\n\n  // Used in app directory, to render script tags as server components.\n  appDir?: boolean\n  nonce?: string\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n"],"mappings":";;;;;+BAEa;;;WAAAA,kBAAA;;;;+DAFK;AAEX,MAAMA,kBAAA,GAURC,MAAA,CAAAC,OAAK,CAACC,aAAa,CAAC,CAAC;AAE1B,IAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;EACzCN,kBAAA,CAAmBO,WAAW,GAAG;AACnC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}